人工智能现代方法：
4.3使用不确定动作的搜索
3章假设环境可以观察和确定，到那时实际中并不一定能够确定。
如果环境是部分可观察或者不确定，感知信息就很关键。
每个感知信息都可能缩小agent得感知范围
所以问题并不是一个策略，而是一个应急规划。

4.3.1不稳定的吸尘器世界。
不确定性问题得解对于具体情况是if-then-else语句。
所以不确定性问题的是树而不是序列。

4.3.2与或搜索树。
确定性问题中是分支是由或结点形成。
如果在不确定性环境下进行搜索每个节点被称为与结点。

与或问题的解是一颗子树。
1：每个叶子都有目标点；
2：或结点规范一个行动
3：与结点上包含所有可能结果。

与或图也可以用宽度优先或者最佳优先方法搜索。启发式函数得概念必须修改为所有可能得解，而不是一个序列。

4.3.3不断尝试。
如果每个叶子都是目标状态并且叶子从规划中得任一点都是可达得，会考虑循环解。

4.4 使用部分可观察信息得搜索。
如果agent感知不到任何信息，那么称为无传感问题。无传感问题也可以求解。
在无传感信息空间中，需要在信念空间中搜索，而不是在实际空间中搜索。
信息状态搜索问题：
例如物理问题P，有如下的几个模块
a：信念状态： 包含物理状态每个可能，N状态对应 2^N 种可能。
b：初始状态：P中所有状态。
c：行动：
d：转移模型：agent知道某一个物理状态可能导致另一个状态。知道可能达到得状态集。
e：目标测试：agent需要一个确保生效得规划。
f：路径开销：

无传感信息空间得问题是，信念状态可能爆炸。
解决方法要么用更紧凑得方法表达状态，或者干脆当成黑盒子。或者设置增量式得信念状态搜索算法。

4.4.2有观察信息的搜索。
当有局部观察时：
预测阶段与无感知信息问题相同。
观察阶段确定预测状态里可观察的感知a集合。
更新阶段对于每个可能的感知信息确定可能得到的信息状态。

4.4.3求解部分可观察环境中的问题。

4.4.4部分可观察环境中的agent
agent先对问题进行形式化，调用搜索算法进行求解，然后执行解步骤。
问题的解这里是一个条件规划而不是一个序列。
agent需要在完成行动和接受感知信息时维护自身的信念状态。

在部分可观察函数中，维护自身信念状态时核心函数。这个函数包括监视器，过滤器，状态预估器。

4.5联机搜索agent和未知环境
之前讨论脱机算法，现在联机通过交替计算和行动来完成任务。
联机搜索适合停留不动或者计算时间过长会带来不利影响的情况。

4.5.1联机搜索问题：
只能通过agent执行行动来求解。不是纯粹的计算问题。
只知道以下问题
1actions，返回状态下s可能进行的行动列表
2单步耗散函数，
3goal-test
4agent可以通过启发式函数预测和目的地距离。

联机搜索可能会进入无法到达目标的死胡同状态。
联机搜索算法性能通常考虑整个状态空间的大小，而不是最浅目标的深度。

4.5.2联机搜索agent
在联机搜索中需要维护一个表，表中列出的每个状态所有还没有回溯的祖先状态，如果agent没有可以回溯得了，就是搜索完成了。

4.5.3联机局部搜索：
爬山法时联机搜索一个例子，但是陷入了局部最优，解决方法可以是加入随机性，但是并不是最优
增加爬山法的内存是一个更好的情况。
应该根据对其邻居状态的代价来估计选择到达目标的最佳可能路径。
这样的agent被称为实时学习A*agent LRTA。

4.5.4联机搜索中的学习
联机搜索agent初始对环境的无知提供了学习机会。
首先，agent通过记录来学习地图
其次：局部搜索agent利用局部更新规划可以得到更精确的估计。
agent并不智能，并不知道up后通过down能够回来，需要进行更深一步的学习。


